
C:\Users\georg\AppData\Local\arduino\sketches\C334C240AF1747013D6C1964B07845F8/ExhibitionDiGeeCodeTrueBinaryFeedbackVers.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001c7c l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00007fe0 l    d  .fini	00000000 .fini
00007fe4 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20001ec0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
6000c27c l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	00000218 ResetHandler2
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00000000 l    df *ABS*	00000000 tempmon.c
20002764 l     O .bss	00000004 s_hotCount
20002768 l     O .bss	00000004 s_hotTemp
2000276c l     O .bss	00000004 s_hot_ROOM
20002770 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
000063f8 l     F .text.itcm	00000088 schedule_transfer
00006480 l     F .text.itcm	00000036 run_callbacks
000064b8 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
200026fc l     O .bss	00000008 endpoint0_buffer
20002704 l     O .bss	00000004 endpoint0_notify_mask
200020e0 l     O .bss	00000008 endpoint0_setupdata
20002708 l     O .bss	00000004 endpointN_notify_mask
2000272c l     O .bss	00000008 reply_buffer
200027a4 l     O .bss	00000001 sof_usage
200027ac l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
200027a1 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
000000e0 l     F .text.itcm	00000000 register_tm_clones
00000104 l     F .text.itcm	00000000 frame_dummy
20002710 l     O .bss	00000000 object.0
60001c70 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 ExhibitionDiGeeCodeTrueBinaryFeedbackVers.ino.cpp
00001bc0 l     F .text.itcm	00000128 _GLOBAL__sub_I_display
00001ce8 l     F .text.itcm	000001b0 OLEDControl::updateMode() [clone .isra.0]
00002ba4 l     F .text.itcm	000001cc setup::{lambda(Button2&)#1}::_FUN(Button2&)
00002240 l     F .text.itcm	000001b0 setup::{lambda(Button2&)#2}::_FUN(Button2&)
60001c7c l     O .text.progmem	0000001e Arrow
60001cdc l     O .text.progmem	00000008 OLEDCursor
60001cbc l     O .text.progmem	00000020 playIcon
60001c9c l     O .text.progmem	00000020 pauseIcon
2000081c l     O .data	00000010 xButtons
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
000055dc l     F .text.itcm	00000084 pit_isr()
00005660 l     F .text.itcm	00000020 __tcf_0
000057f4 l     F .text.itcm	0000002c _GLOBAL__sub_I__ZN13IntervalTimer14nvic_prioritesE
20001ec0 l     O .bss	00000060 funct_table
00000000 l    df *ABS*	00000000 Adafruit_SSD1306.cpp
000040a8 l     F .text.itcm	00000088 Adafruit_SSD1306::drawFastHLineInternal(short, short, short, unsigned short) [clone .part.0]
00004130 l     F .text.itcm	00000160 Adafruit_SSD1306::drawFastVLineInternal(short, short, short, unsigned short) [clone .part.0]
60001dd4 l     O .text.progmem	00000008 Adafruit_SSD1306::drawFastVLineInternal(short, short, short, unsigned short)::premask
60001ddc l     O .text.progmem	00000008 Adafruit_SSD1306::drawFastVLineInternal(short, short, short, unsigned short)::postmask
60001de4 l     O .text.progmem	000002c0 splash1_data
600020a4 l     O .text.progmem	000001e0 splash2_data
60002284 l     O .text.progmem	00000004 Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)::init1
60002288 l     O .text.progmem	00000004 Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)::init2
6000228c l     O .text.progmem	00000004 Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)::init3
60002290 l     O .text.progmem	00000006 Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)::init5
60002298 l     O .text.progmem	00000005 Adafruit_SSD1306::display()::dlist1
600022a0 l     O .text.progmem	00000002 Adafruit_SSD1306::startscrollright(unsigned char, unsigned char)::scrollList1a
600022a4 l     O .text.progmem	00000003 Adafruit_SSD1306::startscrollright(unsigned char, unsigned char)::scrollList1b
600022a8 l     O .text.progmem	00000002 Adafruit_SSD1306::startscrollleft(unsigned char, unsigned char)::scrollList2a
600022ac l     O .text.progmem	00000003 Adafruit_SSD1306::startscrollleft(unsigned char, unsigned char)::scrollList2b
600022b0 l     O .text.progmem	00000002 Adafruit_SSD1306::startscrolldiagright(unsigned char, unsigned char)::scrollList3a
600022b4 l     O .text.progmem	00000002 Adafruit_SSD1306::startscrolldiagright(unsigned char, unsigned char)::scrollList3b
600022b8 l     O .text.progmem	00000002 Adafruit_SSD1306::startscrolldiagright(unsigned char, unsigned char)::scrollList3c
600022bc l     O .text.progmem	00000002 Adafruit_SSD1306::startscrolldiagleft(unsigned char, unsigned char)::scrollList4a
600022c0 l     O .text.progmem	00000002 Adafruit_SSD1306::startscrolldiagleft(unsigned char, unsigned char)::scrollList4b
600022c4 l     O .text.progmem	00000002 Adafruit_SSD1306::startscrolldiagleft(unsigned char, unsigned char)::scrollList4c
00000000 l    df *ABS*	00000000 usb_desc.c
20001740 l     O .data	00000012 device_descriptor
20001954 l     O .data	00000028 microsoft_os_compatible_id_desc
2000197c l     O .data	00000012 microsoft_os_string_desc
600023c4 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 interrupt.c
00005dac l     F .text.itcm	00000002 dummy_isr
200002a0 l     O .data	00000014 CSWTCH.6
00000000 l    df *ABS*	00000000 SPI.cpp
00000000 l    df *ABS*	00000000 Adafruit_GFX.cpp
2000031c l     O .data	00000500 font
00000000 l    df *ABS*	00000000 Adafruit_SPITFT.cpp
00000000 l    df *ABS*	00000000 Bounce.cpp
00000000 l    df *ABS*	00000000 Button2.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 HardwareSerial1.cpp
200020e8 l     O .bss	00000040 rx_buffer1
20002168 l     O .bss	00000040 tx_buffer1
200002bc l     O .data	00000060 UART6_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial2.cpp
20002128 l     O .bss	00000040 rx_buffer2
200021a8 l     O .bss	00000028 tx_buffer2
20001298 l     O .data	00000060 UART4_Hardware
00000000 l    df *ABS*	00000000 Print.cpp
00005828 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
00006d64 l     F .text.itcm	00000060 rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
00006dc4 l     F .text.itcm	000000b4 rx_event
00006e78 l     F .text.itcm	00000090 usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
00006f08 l     F .text.itcm	000001b8 usb_serial_write.part.0
20002734 l     O .bss	00000004 rx_available
20002738 l     O .bss	00000010 rx_count
200027a2 l     O .bss	00000001 rx_head
20002748 l     O .bss	00000010 rx_index
20002758 l     O .bss	00000009 rx_list
20002798 l     O .bss	00000002 rx_packet_size
200027a3 l     O .bss	00000001 rx_tail
20001f60 l     O .bss	00000100 rx_transfer
200027a6 l     O .bss	00000001 transmit_previous_timeout
2000279a l     O .bss	00000002 tx_available
200027a7 l     O .bss	00000001 tx_head
200027a8 l     O .bss	00000001 tx_noautoflush
2000279c l     O .bss	00000002 tx_packet_size
20002060 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
200027a0 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 Encoder.cpp
00007fc0 l     F .text.itcm	00000008 ___init_veneer
00007fc8 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
00007fd0 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
60001c38 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60001c40 l     F .text.code	00000008 __pwm_init_veneer
60001c48 l     F .text.code	00000008 ____libc_init_array_veneer
60001c50 l     F .text.code	00000008 __set_arm_clock_veneer
60001c58 l     F .text.code	00000008 __delay_veneer
60001c60 l     F .text.code	00000008 __memset_veneer
60001c68 l     F .text.code	00000008 __main_veneer
000072e8 g     F .text.itcm	00000018 usb_serial_available
20002610 g     O .bss	00000004 clockCounter
00000140  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
600017f4 g     F .text.code	00000002 startup_default_late_hook
000074b8  w    F .text.itcm	000000d8 yield
20002794 g     O .bss	00000004 usb_timer1_callback
0000344c g     F .text.itcm	0000001e Adafruit_GFX::fillScreen(unsigned short)
600022e0 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
00003420 g     F .text.itcm	00000012 Adafruit_GFX::writeFastHLine(short, short, short, unsigned short)
00000ce4  w    F .text.itcm	0000008c Encoder::isr21()
20001018 g     O .data	00000140 Wire1
2000083c  w    O .data	00000010 teensy::inplace_function_detail::empty_vtable<void>
000010b8  w    F .text.itcm	0000008c Encoder::isr28()
20002434 g     O .bss	00000001 __lock___atexit_recursive_mutex
60001670 g     F .text.code	00000034 TwoWire::configSDApin(unsigned char)
00005910 g     F .text.itcm	0000001c Print::println()
000032ac g     F .text.itcm	000000aa TwoWire::isr()
000012e8  w    F .text.itcm	00000090 Encoder::isr32()
00007b4c g     F .text.itcm	0000000c __malloc_unlock
200008b8 g     O .data	00000058 vtable for Adafruit_SSD1306
0000125c  w    F .text.itcm	0000008c Encoder::isr31()
2000279f g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
00000884  w    F .text.itcm	0000008c Encoder::isr13()
60001bd4 g     F .text.code	00000054 analog_init
00004c28 g     F .text.itcm	00000090 Button2::Button2(unsigned char, unsigned char, bool, Hardware*)
0000013c  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*)#4}::_FUN(void*)
000055d0  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*, void*)#2}::_FUN(void*, void*)
20000e04 g     O .data	00000004 F_CPU_ACTUAL
00000fa0  w    F .text.itcm	0000008c Encoder::isr26()
00007fec g       .ARM.exidx	00000000 __exidx_end
2000279e g     O .bss	00000001 EventResponder::runningFromYield
200017d4 g     O .data	00000080 isr_table_gpio2
00006398 g     F .text.itcm	00000060 tempmonGetTemp
000058a8 g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
200012fc g     O .data	00000004 __atexit_recursive_mutex
00007c2c g     F .text.itcm	0000000c __errno
00005468 g     F .text.itcm	0000014a HardwareSerialIMXRT::IRQHandler()
60001000 g     O .text.headers	00000020 ImageVectorTable
200021d8 g     O .bss	00000004 EventResponder::firstInterrupt
00006ce8 g     F .text.itcm	00000004 usb_transfer_status
000055c0 g     F .text.itcm	0000000c IRQHandler_Serial2
00004c14 g     F .text.itcm	00000012 Bounce::fallingEdge()
200021e0 g     O .bss	0000001c HardwareSerialIMXRT::s_serials_with_serial_events
000015b8  w    F .text.itcm	00000090 Encoder::isr37()
00003750 g     F .text.itcm	00000118 Adafruit_GFX::writeLine(short, short, short, short, unsigned short)
20000e18 g     O .data	00000060 Serial1
00006d5c  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
200009c0 g     O .data	00000280 digital_pin_to_info_PGM
2000270c g     O .bss	00000004 errno
60001d34  w    O .text.progmem	00000050 TwoWire::i2c3_hardware
00007fe8 g       .text.itcm	00000000 _etext
20001ec0 g       .bss	00000000 _sbss
00004dfc g     F .text.itcm	00000068 Button2::loop()
0000451c g     F .text.itcm	000000f6 Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)
00003544 g     F .text.itcm	000000a4 Adafruit_GFX::drawLine(short, short, short, short, unsigned short)
00005d18 g     F .text.itcm	00000024 digitalRead
600023d0 g       *ABS*	00000000 _stextload
000023f0 g     F .text.itcm	00000640 loop
00006060 g     F .text.itcm	0000007a flexpwm_init
600017f8 g     F .text.code	00000004 startup_debug_reset
00006bac g     F .text.itcm	00000064 usb_config_rx
0000014c  w    F .text.itcm	00000008 ArduinoHardware::pinMode(int, int)
000017d8  w    F .text.itcm	000003e8 Encoder::attach_interrupt(unsigned char, Encoder_internal_state_t*)
000006e0  w    F .text.itcm	0000008c Encoder::isr10()
00003868 g     F .text.itcm	00000030 Adafruit_GFX::Adafruit_GFX(short, short)
000031ac g     F .text.itcm	00000100 TwoWire::endTransmission(unsigned char)
000043d4 g     F .text.itcm	00000010 Adafruit_SSD1306::~Adafruit_SSD1306()
200021d4 g     O .bss	00000004 EventResponder::lastInterrupt
00005ec4 g     F .text.itcm	00000134 memcpy
2000172c g     O .data	00000014 ctr
20001ec0 g     O .data	00000000 .hidden __TMC_END__
2000277c g     O .bss	00000004 systick_millis_count
00001768  w    F .text.itcm	00000070 theBinaries::theBinaries()
0000316c g     F .text.itcm	00000040 TwoWire::wait_idle()
00005388 g     F .text.itcm	000000dc HardwareSerialIMXRT::write9bit(unsigned long)
00004614 g     F .text.itcm	0000039c Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)
000050ac g     F .text.itcm	0000029c HardwareSerialIMXRT::begin(unsigned long, unsigned short)
200027aa g     O .bss	00000001 usb_configuration
20001724 g     O .data	00000008 clock2
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
600022e0  w    O .text.progmem	00000018 usb_string_manufacturer_name
000075c0 g     F .text.itcm	00000010 malloc
000043e4 g     F .text.itcm	00000092 Adafruit_SSD1306::ssd1306_command1(unsigned char)
00004cb8 g     F .text.itcm	00000004 Button2::setLongClickTime(unsigned int)
60001d84  w    O .text.progmem	00000050 TwoWire::i2c1_hardware
00002fc0  w    F .text.itcm	0000001e TwoWire::read()
60001a98 g     F .text.code	000000e8 usb_init
0000346c g     F .text.itcm	00000002 Adafruit_GFX::invertDisplay(bool)
000001f4  w    F .text.itcm	0000008c Encoder::isr1()
00000398  w    F .text.itcm	0000008c Encoder::isr4()
2000246c g     O .bss	00000004 __malloc_top_pad
20002780 g     O .bss	00000004 systick_safe_read
00003064 g     F .text.itcm	00000108 TwoWire::force_clock()
200009a0  w    O .data	00000010 teensy::inplace_function<void (), 16u, 8u>::inplace_function<void (&)(), void (*)(), void>(void (&)())::vt
aaaaaaab g       *ABS*	00000000 _flexram_bank_config
20001304 g     O .data	00000000 .hidden __dso_handle
20000000 g       .data	00000000 _sdata
60002360 g     O .text.progmem	00000062 usb_config_descriptor_480
20002680 g     O .bss	0000001c encoder
00007c08 g     F .text.itcm	00000024 _sbrk_r
200025a8 g     O .bss	00000068 bGang
600017ec g     F .text.code	00000002 startup_default_early_hook
00003fb4 g     F .text.itcm	000000f2 Adafruit_SSD1306::drawPixel(short, short, unsigned short)
60001648 g     F .text.code	00000028 ResetHandler
00007370 g     F .text.itcm	00000020 usb_serial_getchar
20002784 g     O .bss	00000008 usb_cdc_line_coding
00005cc4 g     F .text.itcm	00000054 digitalWrite
000049d0 g     F .text.itcm	000001c0 Adafruit_SSD1306::display()
200021dc g     O .bss	00000004 EventResponder::lastYield
00004d04 g     F .text.itcm	00000066 Button2::_handlePress(long)
000011d0  w    F .text.itcm	0000008c Encoder::isr30()
00001408  w    F .text.itcm	00000090 Encoder::isr34()
20002464 g     O .bss	00000004 __malloc_max_sbrked_mem
00005d3c g     F .text.itcm	00000070 pinMode
00004ef0 g     F .text.itcm	00000026 HardwareSerialIMXRT::available()
00004bb8 g     F .text.itcm	0000005c Bounce::update()
600016a4 g     F .text.code	00000054 TwoWire::setSDA(unsigned char)
20001158 g     O .data	00000140 Wire2
6000c400 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
00007fe4 g       .ARM.exidx	00000000 __exidx_start
200021d0 g     O .bss	00000004 EventResponder::firstYield
00001498  w    F .text.itcm	00000090 Encoder::isr35()
00004ecc  w    F .text.itcm	00000004 HardwareSerialIMXRT::operator bool()
00002a30 g     F .text.itcm	00000168 midiClock(HardwareSerial&, int)
00003434 g     F .text.itcm	00000018 Adafruit_GFX::writeFillRect(short, short, short, short, unsigned short)
00007c38 g     F .text.itcm	00000048 __libc_init_array
00002fb4  w    F .text.itcm	0000000c TwoWire::available()
20002614 g     O .bss	0000006c display
00004cc4 g     F .text.itcm	0000003e Button2::_checkForLongClick(long)
20000938 g     O .data	00000030 vtable for HardwareSerialIMXRT
20001754 g     O .data	00000080 isr_table_gpio1
00000e88  w    F .text.itcm	0000008c Encoder::isr24()
00006d44  w    F .text.itcm	00000004 usb_serial_class::clear()
200019a6 g     O .data	00000001 divideState
0000635c  w    F .text.itcm	00000034 _sbrk
6000a3bc g       *ABS*	00000000 _sdataload
00005db0 g     F .text.itcm	00000104 attachInterrupt
20001300 g     O .data	00000004 __brkval
200027a9 g     O .bss	00000001 usb_cdc_line_rtsdtr
00004b90 g     F .text.itcm	00000028 Bounce::Bounce(unsigned char, unsigned long)
60001c28 g     F .text.code	00000000 _init
000070c0 g     F .text.itcm	00000002 usb_serial_reset
0000015c  w    F .text.itcm	0000000a ArduinoHardware::digitalRead(int)
600022fc g     O .text.progmem	00000062 usb_config_descriptor_12
00000020 g     F .text.itcm	000000c0 irq_gpio6789
20000968 g     O .data	00000024 vtable for TwoWire
00000dfc  w    F .text.itcm	0000008c Encoder::isr23()
200027e0 g       .bss	00000000 _ebss
000033fc g     F .text.itcm	0000000e Adafruit_GFX::writePixel(short, short, unsigned short)
00003d60 g     F .text.itcm	00000136 Adafruit_GFX::write(unsigned char)
600016f8 g     F .text.code	00000034 TwoWire::configSCLpin(unsigned char)
00004cbc g     F .text.itcm	00000004 Button2::setClickHandler(void (*)(Button2&))
00003364 g     F .text.itcm	0000000c lpi2c3_isr()
00004290 g     F .text.itcm	00000076 Adafruit_SSD1306::drawFastHLine(short, short, short, unsigned short)
20203080 g       .bss.dma	00000000 _heap_start
0000102c  w    F .text.itcm	0000008c Encoder::isr27()
20002438 g     O .bss	00000001 __lock___malloc_recursive_mutex
000007f8  w    F .text.itcm	0000008c Encoder::isr12()
60001ce4  w    O .text.progmem	00000050 TwoWire::i2c4_hardware
20002470 g     O .bss	00000138 __sf
00001e98 g     F .text.itcm	000000d0 displayImage()
00004d6c g     F .text.itcm	00000058 Button2::_reportClicks()
00000001 g       *ABS*	00000000 _itcm_block_count
20001f40 g     O .bss	00000020 endpoint0_transfer_data
000060dc g     F .text.itcm	000000f4 pwm_init
6000d000 g       .text.csf	00000000 __text_csf_end
0000340c g     F .text.itcm	00000012 Adafruit_GFX::writeFastVLine(short, short, short, unsigned short)
6000190c g     F .text.code	0000005c usb_pll_start
00003370 g     F .text.itcm	0000000c lpi2c4_isr()
20001f20 g     O .bss	00000020 endpoint0_transfer_ack
2000278c g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
00006ca4 g     F .text.itcm	00000028 usb_transmit
00004eac g     F .text.itcm	00000020 systick_isr
00007c84 g     F .text.itcm	00000002 __retarget_lock_release_recursive
20000e08 g     O .data	00000010 Serial
000055b4 g     F .text.itcm	0000000c IRQHandler_Serial1
00005820  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
600017ec  w    F .text.code	00000002 startup_early_hook
000072a4 g     F .text.itcm	00000044 usb_serial_peekchar
0000592c g     F .text.itcm	000002f0 set_arm_clock
20002778 g     O .bss	00000004 systick_cycle_count
200027a5 g     O .bss	00000001 timerFlag
20001990 g     O .data	00000016 usb_string_serial_number_default
00007db0 g     F .text.itcm	0000020c _free_r
00005044 g     F .text.itcm	00000068 HardwareSerialIMXRT::end()
00005464 g     F .text.itcm	00000004 HardwareSerialIMXRT::write(unsigned char)
200022a4 g     O .bss	00000190 __atexit0
00001648  w    F .text.itcm	00000090 Encoder::isr38()
00006d54  w    F .text.itcm	00000004 usb_serial_class::flush()
20001710 g     O .data	00000004 __malloc_sbrk_base
00006d4c  w    F .text.itcm	00000004 usb_serial_class::read()
000035e8 g     F .text.itcm	00000094 Adafruit_GFX::fillRect(short, short, short, short, unsigned short)
00006390  w    F .text.itcm	00000004 __cxa_pure_virtual
00006c74 g     F .text.itcm	00000030 usb_prepare_transfer
00004f18 g     F .text.itcm	0000007a HardwareSerialIMXRT::peek()
000061d0 g     F .text.itcm	0000018c unused_interrupt_vector
20002790 g     O .bss	00000004 usb_timer0_callback
60001968 g     F .text.code	00000130 tempmon_init
00007c88 g     F .text.itcm	00000088 __register_exitproc
000055d8  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*)#4}::_FUN(void*)
00000910  w    F .text.itcm	0000008c Encoder::isr14()
00004cc0 g     F .text.itcm	00000004 Button2::setDoubleClickHandler(void (*)(Button2&))
00007300 g     F .text.itcm	00000070 usb_serial_flush_input
00007390 g     F .text.itcm	0000002c usb_serial_putchar
00000024 g       *ABS*	00000000 _teensy_model_identifier
00004f94 g     F .text.itcm	00000092 HardwareSerialIMXRT::read()
2000243c g     O .bss	00000028 __malloc_current_mallinfo
000033f8 g     F .text.itcm	00000002 Adafruit_GFX::endWrite()
60001b80 g     F .text.code	00000054 _reboot_Teensyduino_
2000269c g     O .bss	00000060 encoderButton
600017f0 g     F .text.code	00000002 startup_default_middle_hook
000005c8  w    F .text.itcm	0000008c Encoder::isr8()
0000657c g     F .text.itcm	00000630 usb_isr
00007b58 g     F .text.itcm	0000000c __cxa_atexit
000004b0  w    F .text.itcm	0000008c Encoder::isr6()
00005680 g     F .text.itcm	00000104 IntervalTimer::beginCycles(teensy::inplace_function<void (), 16u, 8u>, unsigned long)
00004c28 g     F .text.itcm	00000090 Button2::Button2(unsigned char, unsigned char, bool, Hardware*)
00003898 g     F .text.itcm	000000f4 Adafruit_GFX::drawBitmap(short, short, unsigned char const*, short, short, unsigned short)
00004478 g     F .text.itcm	000000a2 Adafruit_SSD1306::invertDisplay(bool)
20001854 g     O .data	00000080 isr_table_gpio3
20000910  w    O .data	00000028 vtable for usb_serial_class
0000053c  w    F .text.itcm	0000008c Encoder::isr7()
20002774 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
2000084c g     O .data	00000058 vtable for Adafruit_GFX
000034ec g     F .text.itcm	00000058 Adafruit_GFX::drawFastHLine(short, short, short, unsigned short)
20001308 g     O .data	00000408 __malloc_av_
200022a0 g     O .bss	00000004 __atexit
00000a28  w    F .text.itcm	0000008c Encoder::isr16()
00007424 g     F .text.itcm	00000094 usb_serial_flush_output
00007b40 g     F .text.itcm	0000000c __malloc_lock
00005028 g     F .text.itcm	0000001a HardwareSerialIMXRT::flush()
20001c00 g     O .data	000002c0 _VectorsRam
00002d7c g     F .text.itcm	00000234 SPIClass::begin()
200027ad g     O .bss	00000001 yield_active_check_flags
00007c80 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
200027ab g     O .bss	00000001 usb_high_speed
00007b64 g     F .text.itcm	000000a4 memset
00005eb4 g     F .text.itcm	00000010 main
00003494 g     F .text.itcm	00000058 Adafruit_GFX::drawFastVLine(short, short, short, unsigned short)
20002468 g     O .bss	00000004 __malloc_max_total_mem
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
00001768  w    F .text.itcm	00000070 theBinaries::theBinaries()
00006cec g     F .text.itcm	00000058 usb_init_serialnumber
000033f8 g     F .text.itcm	00000002 Adafruit_GFX::startWrite()
60001c7c g       .text.code	00000000 __init_array_end
000075e0 g     F .text.itcm	00000560 _malloc_r
0000030c  w    F .text.itcm	0000008c Encoder::isr3()
000016d8  w    F .text.itcm	00000090 Encoder::isr39()
00000bcc  w    F .text.itcm	0000008c Encoder::isr19()
200009b0  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
0000337c g     F .text.itcm	00000078 TwoWire::setClock(unsigned long)
00007d10 g     F .text.itcm	000000a0 _malloc_trim_r
00000280  w    F .text.itcm	0000008c Encoder::isr2()
600022f8 g     O .text.progmem	00000004 string0
000073bc g     F .text.itcm	00000018 usb_serial_write
600017f4  w    F .text.code	00000002 startup_late_hook
00002d70 g     F .text.itcm	0000000c clock2Handler()
00006d50  w    F .text.itcm	00000004 usb_serial_class::available()
000043d4 g     F .text.itcm	00000010 Adafruit_SSD1306::~Adafruit_SSD1306()
00000168  w    F .text.itcm	0000008c Encoder::isr0()
20000000 g     O .data	00000280 endpoint_queue_head
600022c8  w    O .text.progmem	00000016 usb_string_product_name
00005c1c g     F .text.itcm	000000a8 delay
00007fe0 g     F .fini	00000000 _fini
00002ffc g     F .text.itcm	0000002a TwoWire::write(unsigned char)
60001020 g     O .text.headers	0000000c BootData
000058f8 g     F .text.itcm	00000016 Print::print(long)
00006394 g     F .text.itcm	00000004 Panic_Temp_isr
000055d4  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*, void*)#3}::_FUN(void*, void*)
0000367c g     F .text.itcm	000000d4 Adafruit_GFX::drawRect(short, short, short, short, unsigned short)
00001378  w    F .text.itcm	00000090 Encoder::isr33()
20001718 g     O .data	00000004 _impure_ptr
20000ed8 g     O .data	00000140 Wire
00005784 g     F .text.itcm	00000070 IntervalTimer::end()
60001c70 g       .text.code	00000000 __preinit_array_end
0000437c g     F .text.itcm	00000058 Adafruit_SSD1306::Adafruit_SSD1306(unsigned char, unsigned char, TwoWire*, signed char, unsigned long, unsigned long)
00001528  w    F .text.itcm	00000090 Encoder::isr36()
00000b40  w    F .text.itcm	0000008c Encoder::isr18()
00006550 g     F .text.itcm	0000002c usb_stop_sof_interrupts
00001144  w    F .text.itcm	0000008c Encoder::isr29()
00002fe0  w    F .text.itcm	00000018 TwoWire::peek()
00002ff8  w    F .text.itcm	00000002 TwoWire::flush()
00001f68 g     F .text.itcm	000002d8 setup
20000c5c g     O .data	00000084 usb_descriptor_list
00000ab4  w    F .text.itcm	0000008c Encoder::isr17()
000033f4  w    F .text.itcm	00000002 Print::flush()
00000654  w    F .text.itcm	0000008c Encoder::isr9()
20002728 g     O .bss	00000001 oledControl
0000398c g     F .text.itcm	000003d4 Adafruit_GFX::drawChar(short, short, unsigned char, unsigned short, unsigned short, unsigned char, unsigned char)
200021fc g     O .bss	00000004 Button2::_nextID
20078000 g       .text.csf	00000000 _estack
000073d4 g     F .text.itcm	00000050 usb_serial_write_buffer_free
00000128  w    F .text.itcm	00000004 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*)#1}::_FUN(void*)
6000172c g     F .text.code	00000058 TwoWire::setSCL(unsigned char)
00000424  w    F .text.itcm	0000008c Encoder::isr5()
000070c4 g     F .text.itcm	00000100 usb_serial_configure
00003028 g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
20001ec0 g       .data	00000000 _edata
00000d70  w    F .text.itcm	0000008c Encoder::isr22()
00006d58  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
2000171c g     O .data	00000008 clock1
00003358 g     F .text.itcm	0000000c lpi2c1_isr()
00000134  w    F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*, void*)#3}::_FUN(void*, void*)
00005348 g     F .text.itcm	00000040 nvic_execution_priority()
00004b90 g     F .text.itcm	00000028 Bounce::Bounce(unsigned char, unsigned long)
200018d4 g     O .data	00000080 isr_table_gpio4
00005ffc g     F .text.itcm	00000062 ultoa
60001784 g     F .text.code	00000068 TwoWire::begin()
00004308 g     F .text.itcm	00000074 Adafruit_SSD1306::drawFastVLine(short, short, short, unsigned short)
00002b98 g     F .text.itcm	0000000c clock1Handler()
00005ff8 g     F .text.itcm	00000004 operator new(unsigned int)
00004e64 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
20001714 g     O .data	00000004 __malloc_trim_threshold
00006d48  w    F .text.itcm	00000004 usb_serial_class::peek()
0000076c  w    F .text.itcm	0000008c Encoder::isr11()
00003ea4  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
000049b0 g     F .text.itcm	0000001e Adafruit_SSD1306::clearDisplay()
20000ce0 g     O .data	00000120 _impure_data
0000437c g     F .text.itcm	00000058 Adafruit_SSD1306::Adafruit_SSD1306(unsigned char, unsigned char, TwoWire*, signed char, unsigned long, unsigned long)
00000154  w    F .text.itcm	00000008 ArduinoHardware::digitalWrite(int, int)
0000099c  w    F .text.itcm	0000008c Encoder::isr15()
60001c70 g       .text.code	00000000 __init_array_start
20000e00 g     O .data	00000004 F_BUS_ACTUAL
000055cc  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*)#1}::_FUN(void*)
00000f14  w    F .text.itcm	0000008c Encoder::isr25()
00000000 g       .text.itcm	00000000 _stext
200012f8 g     O .data	00000004 IntervalTimer::nvic_priorites
0000012c  w    F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*, void*)#2}::_FUN(void*, void*)
00000140  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
600022c8 g     O .text.progmem	00000016 usb_string_product_name_default
00004ed0 g     F .text.itcm	00000020 HardwareSerialIMXRT::availableForWrite()
600017f0  w    F .text.code	00000002 startup_middle_hook
600017fc g     F .text.code	00000110 configure_cache
00000c58  w    F .text.itcm	0000008c Encoder::isr20()
60001c70 g       .text.code	00000000 __preinit_array_start
00006ccc g     F .text.itcm	0000001c usb_receive
200008a4  w    O .data	00000014 vtable for ArduinoHardware
0000d000 g       *ABS*	00000000 _flashimagelen
20002200 g     O .bss	000000a0 Encoder::interruptArgs
00003868 g     F .text.itcm	00000030 Adafruit_GFX::Adafruit_GFX(short, short)
000075b4 g     F .text.itcm	0000000a __aeabi_atexit
00007590 g     F .text.itcm	00000024 rtc_get
00004dc4 g     F .text.itcm	00000036 Button2::_releasedNow(long)
00003e98 g     F .text.itcm	0000000c Adafruit_GFX::setTextSize(unsigned char)
00004ea8 g     F .text.itcm	00000004 pendablesrvreq_isr
00002fb0  w    F .text.itcm	00000004 Print::availableForWrite()
000071c4 g     F .text.itcm	000000e0 usb_serial_read
00003470 g     F .text.itcm	00000022 Adafruit_GFX::setRotation(unsigned char)
00006c10 g     F .text.itcm	00000064 usb_config_tx
000075d0 g     F .text.itcm	00000010 free
20000e78 g     O .data	00000060 Serial2
20001990  w    O .data	00000016 usb_string_serial_number


